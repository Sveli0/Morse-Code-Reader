// C++ code
const static std::unordered_map<std::string,int> string_to_case{
   {"01",1},
   {"1000",2},
   {"1010",3},
   {"100",4},
   {"0",5},
   {"0010",6},
   {"110",7},
   {"0000"8,},
   {"00",9},
   {"0111",10},
   {"101",11},
   {"0100",12},
   {"11",13},
   {"10",14},
   {"111",15},
   {"0110",16},
   {"1101",17},
   {"010",18},
   {"000",19},
   {"1",20},
   {"001",21},
   {"0001",22},
   {"011",23},
   {"1001",24},
   {"1011",25},
   {"1100",26}

};
int sec = 0;

String lastLetter = "";

void setup()
{
  pinMode(4, INPUT);
  pinMode(3, OUTPUT);
  Serial.begin(9600);
  pinMode(7, INPUT);
}

void loop()
{
  if (digitalRead(4) == 1)
  {
    analogWrite(3, 255);
  }
  else
  {
    analogWrite(3, 0);
  }

  while (digitalRead(4) == 1)
  {
    while (digitalRead(4) ==1)
    {
      sec = (sec + 1);
      //Serial.println(sec);
    }
    
    if (sec < 50)
    {
      lastLetter += "0";
    }
    else lastLetter += "1";
  }
  
  sec = 0;

  if (digitalRead(7) == 1)
  {
    //Serial.println(lastLetter);
    switchMethod(lastLetter);
    lastLetter = "";
  }

  delay(10); // Delay a little bit to improve simulation performance
}

char switchMethod(String a)
{
  char result=' ';
  switch(string_to_case.at(a)) {
    case 1:
    result='a';
    break;

    case 2:
    result='b';
    break;
    
    case 3:
    result = 'c';
    break;

    case 4:
    result = 'd';
    break;

    case 5:
    result = 'e';
    break;

    case 6:
    result = 'f';
    break;

    case 7:
    result = 'g';
    break;

    case 8:
    result = 'h';
    break;

    case 9:
    result = 'i';
    break;

    case 10:
    result = 'j';
    break;

    case 11:
    result = 'k';
    break;

    case 12:
    result = 'l';
    break;

    case 13:
    result = 'm';
    break;

    case 14:
    result = 'n';
    break;

    case 15:
    result = 'o';
    break;

    case 16:
    result = 'p';
    break;

    case 17:
    result = 'q';
    break;

    case 18:
    result = 'r';
    break;

    case 19:
    result = 's';
    break;

    case 20:
    result = 't';
    break;

    case 21:
    result = 'u';
    break;

    case 22:
    result = 'v';
    break;

    case 23:
    result = 'w';
    break;

    case 24:
    result = 'x';
    break;

    case 25:
    result = 'y';
    break;

    case 26:
    result = 'z';
    break;

    default:
    result = ' ';
    break;
  }
  return result;
}
