// C++ code
#include <LiquidCrystal.h>

//LCD display cables plugged in pins:
LiquidCrystal lcd(2, 5, 10, 8, 11, 12);

int sec = 0; //This variable is used to identify if the button is pressed for a short period or a longer period, to know if the input is (.) or (-) in morse code
String lastLetter = "";

void setup()
{
  pinMode(4, INPUT);
  pinMode(3, OUTPUT);
  Serial.begin(9600);
  pinMode(7, INPUT);
  lcd.begin(16, 1);
}

void loop()
{
  if (digitalRead(4) == 1)
  {
    //If button connected to pin 4 is pressed:
    //Light Bulb is on
    analogWrite(3, 255);
    //Piezo is on
    analogWrite(6, 100000);
  }
  else
  {
    //If button connected to pin 4 is not pressed:
    //Bulb is off
    analogWrite(3, 0);
    //Piezo is off
    analogWrite(6, 0);
  }

  while (digitalRead(4) == 1)
  {
    //If button connected to pin 4 is pressed:
    while (digitalRead(4) ==1)
    {
      //Checks again if button is pressed
      if (sec < 8500) //If button is pressed for a short time the variable will be less than 8500
      {
      	sec = (sec + 1); //Increases the variable until it reaches 8500. When it does, it is considered a long press and it would add (-) to the letter combination
      }
      else {} //Does nothing while the button is pressed to prevent the int variable from going back to negative numbers
    }
    
    if (sec < 8500) //Checks if button was pressed for a short time, adds (.) to the letter
    {
      lastLetter += "0";
    }
    else lastLetter += "1"; //Checks if button was pressed for longer, adds (-) to the letter
    
    sec = 0; //Resets variable
  }

  if (digitalRead(7) == 1)
  {
    lcd.print(improvisedSwitch(lastLetter)); //Calls identification method to find which letter responds to the combination and prints it on the display
    while (digitalRead(7) == 1)
    {
      //Empty, it does nothing until letting the button off
    }
    lastLetter = ""; //The leter resets so the new one can start filling up
  }
  
  if (digitalRead(13) == 1)
  {
    lcd.clear(); //This button clears the LCD display
  }

  delay(10); // Delay a little bit to improve simulation performance
}

char improvisedSwitch(String a)
{
  //The letter is string - for example 001 which is (..-) in morse code
  //0 is (.) and 1 is (-)
  if(a=="01") return 'a';
  else if(a=="1000") return'b';
  else if(a=="1010") return'c';
  else if(a=="100") return'd';
  else if(a=="0") return'e';
  else if(a=="0010") return'f';
  else if(a=="110") return'g';
  else if(a=="0000") return'h';
  else if(a=="00") return'i';
  else if(a=="0111") return'j';
  else if(a=="101") return'k';
  else if(a=="0100") return'l';
  else if(a=="11") return'm';
  else if(a=="10") return'n';
  else if(a=="111") return'o';
  else if(a=="0110") return'p';
  else if(a=="1101") return'q';
  else if(a=="010") return'r';
  else if(a=="000") return's';
  else if(a=="1") return't';
  else if(a=="001") return'u';
  else if(a=="0001") return'v';
  else if(a=="011") return'w';
  else if(a=="1001") return'x';
  else if(a=="1011") return'y';
  else if(a=="1100") return'z';
  else if(a=="") return ' ';
  else return '-';
}